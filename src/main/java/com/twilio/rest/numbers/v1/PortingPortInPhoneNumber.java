/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.rest.numbers.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.twilio.base.Resource;
import com.twilio.converter.DateConverter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.time.ZonedDateTime;
import java.util.Objects;
import lombok.ToString;
import lombok.ToString;

@JsonIgnoreProperties(ignoreUnknown = true)
@ToString
public class PortingPortInPhoneNumber extends Resource {

    private static final long serialVersionUID = 245952123111286L;

    public static PortingPortInPhoneNumberDeleter deleter(
        final String pathPortInRequestSid,
        final String pathPhoneNumberSid
    ) {
        return new PortingPortInPhoneNumberDeleter(
            pathPortInRequestSid,
            pathPhoneNumberSid
        );
    }

    public static PortingPortInPhoneNumberFetcher fetcher(
        final String pathPortInRequestSid,
        final String pathPhoneNumberSid
    ) {
        return new PortingPortInPhoneNumberFetcher(
            pathPortInRequestSid,
            pathPhoneNumberSid
        );
    }

    /**
     * Converts a JSON String into a PortingPortInPhoneNumber object using the provided ObjectMapper.
     *
     * @param json Raw JSON String
     * @param objectMapper Jackson ObjectMapper
     * @return PortingPortInPhoneNumber object represented by the provided JSON
     */
    public static PortingPortInPhoneNumber fromJson(
        final String json,
        final ObjectMapper objectMapper
    ) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, PortingPortInPhoneNumber.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    /**
     * Converts a JSON InputStream into a PortingPortInPhoneNumber object using the provided
     * ObjectMapper.
     *
     * @param json Raw JSON InputStream
     * @param objectMapper Jackson ObjectMapper
     * @return PortingPortInPhoneNumber object represented by the provided JSON
     */
    public static PortingPortInPhoneNumber fromJson(
        final InputStream json,
        final ObjectMapper objectMapper
    ) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, PortingPortInPhoneNumber.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    private final String portInRequestSid;
    private final String phoneNumberSid;
    private final URI url;
    private final String accountSid;
    private final String phoneNumberType;
    private final ZonedDateTime dateCreated;
    private final String country;
    private final Boolean missingRequiredFields;
    private final ZonedDateTime lastUpdated;
    private final com.twilio.type.PhoneNumber phoneNumber;
    private final Boolean portable;
    private final String notPortabilityReason;
    private final Integer notPortabilityReasonCode;
    private final String portInPhoneNumberStatus;
    private final Integer portOutPin;
    private final String rejectionReason;
    private final Integer rejectionReasonCode;

    @JsonCreator
    private PortingPortInPhoneNumber(
        @JsonProperty("port_in_request_sid") final String portInRequestSid,
        @JsonProperty("phone_number_sid") final String phoneNumberSid,
        @JsonProperty("url") final URI url,
        @JsonProperty("account_sid") final String accountSid,
        @JsonProperty("phone_number_type") final String phoneNumberType,
        @JsonProperty("date_created") final String dateCreated,
        @JsonProperty("country") final String country,
        @JsonProperty(
            "missing_required_fields"
        ) final Boolean missingRequiredFields,
        @JsonProperty("last_updated") final String lastUpdated,
        @JsonProperty(
            "phone_number"
        ) final com.twilio.type.PhoneNumber phoneNumber,
        @JsonProperty("portable") final Boolean portable,
        @JsonProperty(
            "not_portability_reason"
        ) final String notPortabilityReason,
        @JsonProperty(
            "not_portability_reason_code"
        ) final Integer notPortabilityReasonCode,
        @JsonProperty(
            "port_in_phone_number_status"
        ) final String portInPhoneNumberStatus,
        @JsonProperty("port_out_pin") final Integer portOutPin,
        @JsonProperty("rejection_reason") final String rejectionReason,
        @JsonProperty("rejection_reason_code") final Integer rejectionReasonCode
    ) {
        this.portInRequestSid = portInRequestSid;
        this.phoneNumberSid = phoneNumberSid;
        this.url = url;
        this.accountSid = accountSid;
        this.phoneNumberType = phoneNumberType;
        this.dateCreated = DateConverter.iso8601DateTimeFromString(dateCreated);
        this.country = country;
        this.missingRequiredFields = missingRequiredFields;
        this.lastUpdated = DateConverter.iso8601DateTimeFromString(lastUpdated);
        this.phoneNumber = phoneNumber;
        this.portable = portable;
        this.notPortabilityReason = notPortabilityReason;
        this.notPortabilityReasonCode = notPortabilityReasonCode;
        this.portInPhoneNumberStatus = portInPhoneNumberStatus;
        this.portOutPin = portOutPin;
        this.rejectionReason = rejectionReason;
        this.rejectionReasonCode = rejectionReasonCode;
    }

    public final String getPortInRequestSid() {
        return this.portInRequestSid;
    }

    public final String getPhoneNumberSid() {
        return this.phoneNumberSid;
    }

    public final URI getUrl() {
        return this.url;
    }

    public final String getAccountSid() {
        return this.accountSid;
    }

    public final String getPhoneNumberType() {
        return this.phoneNumberType;
    }

    public final ZonedDateTime getDateCreated() {
        return this.dateCreated;
    }

    public final String getCountry() {
        return this.country;
    }

    public final Boolean getMissingRequiredFields() {
        return this.missingRequiredFields;
    }

    public final ZonedDateTime getLastUpdated() {
        return this.lastUpdated;
    }

    public final com.twilio.type.PhoneNumber getPhoneNumber() {
        return this.phoneNumber;
    }

    public final Boolean getPortable() {
        return this.portable;
    }

    public final String getNotPortabilityReason() {
        return this.notPortabilityReason;
    }

    public final Integer getNotPortabilityReasonCode() {
        return this.notPortabilityReasonCode;
    }

    public final String getPortInPhoneNumberStatus() {
        return this.portInPhoneNumberStatus;
    }

    public final Integer getPortOutPin() {
        return this.portOutPin;
    }

    public final String getRejectionReason() {
        return this.rejectionReason;
    }

    public final Integer getRejectionReasonCode() {
        return this.rejectionReasonCode;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }

        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        PortingPortInPhoneNumber other = (PortingPortInPhoneNumber) o;

        return (
            Objects.equals(portInRequestSid, other.portInRequestSid) &&
            Objects.equals(phoneNumberSid, other.phoneNumberSid) &&
            Objects.equals(url, other.url) &&
            Objects.equals(accountSid, other.accountSid) &&
            Objects.equals(phoneNumberType, other.phoneNumberType) &&
            Objects.equals(dateCreated, other.dateCreated) &&
            Objects.equals(country, other.country) &&
            Objects.equals(
                missingRequiredFields,
                other.missingRequiredFields
            ) &&
            Objects.equals(lastUpdated, other.lastUpdated) &&
            Objects.equals(phoneNumber, other.phoneNumber) &&
            Objects.equals(portable, other.portable) &&
            Objects.equals(notPortabilityReason, other.notPortabilityReason) &&
            Objects.equals(
                notPortabilityReasonCode,
                other.notPortabilityReasonCode
            ) &&
            Objects.equals(
                portInPhoneNumberStatus,
                other.portInPhoneNumberStatus
            ) &&
            Objects.equals(portOutPin, other.portOutPin) &&
            Objects.equals(rejectionReason, other.rejectionReason) &&
            Objects.equals(rejectionReasonCode, other.rejectionReasonCode)
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            portInRequestSid,
            phoneNumberSid,
            url,
            accountSid,
            phoneNumberType,
            dateCreated,
            country,
            missingRequiredFields,
            lastUpdated,
            phoneNumber,
            portable,
            notPortabilityReason,
            notPortabilityReasonCode,
            portInPhoneNumberStatus,
            portOutPin,
            rejectionReason,
            rejectionReasonCode
        );
    }
}
