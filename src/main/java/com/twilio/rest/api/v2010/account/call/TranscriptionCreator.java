/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.rest.api.v2010.account.call;

import com.twilio.base.Creator;
import com.twilio.constant.EnumConstants;
import com.twilio.converter.Promoter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;
import java.net.URI;
import java.net.URI;

public class TranscriptionCreator extends Creator<Transcription> {

    private String pathCallSid;
    private String pathAccountSid;
    private String name;
    private Transcription.Track track;
    private URI statusCallbackUrl;
    private HttpMethod statusCallbackMethod;
    private String inboundTrackLabel;
    private String outboundTrackLabel;
    private Boolean partialResults;
    private String languageCode;
    private String transcriptionEngine;
    private Boolean profanityFilter;
    private String speechModel;
    private String hints;
    private Boolean enableAutomaticPunctuation;

    public TranscriptionCreator(final String pathCallSid) {
        this.pathCallSid = pathCallSid;
    }

    public TranscriptionCreator(
        final String pathAccountSid,
        final String pathCallSid
    ) {
        this.pathAccountSid = pathAccountSid;
        this.pathCallSid = pathCallSid;
    }

    public TranscriptionCreator setName(final String name) {
        this.name = name;
        return this;
    }

    public TranscriptionCreator setTrack(final Transcription.Track track) {
        this.track = track;
        return this;
    }

    public TranscriptionCreator setStatusCallbackUrl(
        final URI statusCallbackUrl
    ) {
        this.statusCallbackUrl = statusCallbackUrl;
        return this;
    }

    public TranscriptionCreator setStatusCallbackUrl(
        final String statusCallbackUrl
    ) {
        return setStatusCallbackUrl(Promoter.uriFromString(statusCallbackUrl));
    }

    public TranscriptionCreator setStatusCallbackMethod(
        final HttpMethod statusCallbackMethod
    ) {
        this.statusCallbackMethod = statusCallbackMethod;
        return this;
    }

    public TranscriptionCreator setInboundTrackLabel(
        final String inboundTrackLabel
    ) {
        this.inboundTrackLabel = inboundTrackLabel;
        return this;
    }

    public TranscriptionCreator setOutboundTrackLabel(
        final String outboundTrackLabel
    ) {
        this.outboundTrackLabel = outboundTrackLabel;
        return this;
    }

    public TranscriptionCreator setPartialResults(
        final Boolean partialResults
    ) {
        this.partialResults = partialResults;
        return this;
    }

    public TranscriptionCreator setLanguageCode(final String languageCode) {
        this.languageCode = languageCode;
        return this;
    }

    public TranscriptionCreator setTranscriptionEngine(
        final String transcriptionEngine
    ) {
        this.transcriptionEngine = transcriptionEngine;
        return this;
    }

    public TranscriptionCreator setProfanityFilter(
        final Boolean profanityFilter
    ) {
        this.profanityFilter = profanityFilter;
        return this;
    }

    public TranscriptionCreator setSpeechModel(final String speechModel) {
        this.speechModel = speechModel;
        return this;
    }

    public TranscriptionCreator setHints(final String hints) {
        this.hints = hints;
        return this;
    }

    public TranscriptionCreator setEnableAutomaticPunctuation(
        final Boolean enableAutomaticPunctuation
    ) {
        this.enableAutomaticPunctuation = enableAutomaticPunctuation;
        return this;
    }

    @Override
    public Transcription create(final TwilioRestClient client) {
        String path =
            "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Transcriptions.json";

        this.pathAccountSid =
            this.pathAccountSid == null
                ? client.getAccountSid()
                : this.pathAccountSid;
        path =
            path.replace(
                "{" + "AccountSid" + "}",
                this.pathAccountSid.toString()
            );
        path = path.replace("{" + "CallSid" + "}", this.pathCallSid.toString());

        Request request = new Request(
            HttpMethod.POST,
            Domains.API.toString(),
            path
        );
        request.setContentType(EnumConstants.ContentType.FORM_URLENCODED);
        addPostParams(request);
        Response response = client.request(request);
        if (response == null) {
            throw new ApiConnectionException(
                "Transcription creation failed: Unable to connect to server"
            );
        } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {
            RestException restException = RestException.fromJson(
                response.getStream(),
                client.getObjectMapper()
            );
            if (restException == null) {
                throw new ApiException(
                    "Server Error, no content",
                    response.getStatusCode()
                );
            }
            throw new ApiException(restException);
        }

        return Transcription.fromJson(
            response.getStream(),
            client.getObjectMapper()
        );
    }

    private void addPostParams(final Request request) {
        if (name != null) {
            request.addPostParam("Name", name);
        }
        if (track != null) {
            request.addPostParam("Track", track.toString());
        }
        if (statusCallbackUrl != null) {
            request.addPostParam(
                "StatusCallbackUrl",
                statusCallbackUrl.toString()
            );
        }
        if (statusCallbackMethod != null) {
            request.addPostParam(
                "StatusCallbackMethod",
                statusCallbackMethod.toString()
            );
        }
        if (inboundTrackLabel != null) {
            request.addPostParam("InboundTrackLabel", inboundTrackLabel);
        }
        if (outboundTrackLabel != null) {
            request.addPostParam("OutboundTrackLabel", outboundTrackLabel);
        }
        if (partialResults != null) {
            request.addPostParam("PartialResults", partialResults.toString());
        }
        if (languageCode != null) {
            request.addPostParam("LanguageCode", languageCode);
        }
        if (transcriptionEngine != null) {
            request.addPostParam("TranscriptionEngine", transcriptionEngine);
        }
        if (profanityFilter != null) {
            request.addPostParam("ProfanityFilter", profanityFilter.toString());
        }
        if (speechModel != null) {
            request.addPostParam("SpeechModel", speechModel);
        }
        if (hints != null) {
            request.addPostParam("Hints", hints);
        }
        if (enableAutomaticPunctuation != null) {
            request.addPostParam(
                "EnableAutomaticPunctuation",
                enableAutomaticPunctuation.toString()
            );
        }
    }
}
